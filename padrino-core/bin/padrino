#!/usr/bin/env ruby

# We load Padrino libs
padrino_core_path = File.expand_path('../../lib', __FILE__)
$:.unshift(padrino_core_path) if File.directory?(padrino_core_path) && !$:.include?(padrino_core_path)

# Build Padrino g as an alias of padrino-gen
if %w(g gen).include?(ARGV[0])
  ARGV.shift
  begin
    # We try to load the vendored padrino-gen if exist
    padrino_gen_path = File.expand_path('../../../padrino-gen/lib', __FILE__)
    $:.unshift(padrino_gen_path) if File.directory?(padrino_gen_path) && !$:.include?(padrino_gen_path)
    require 'padrino-core/command'
    require 'padrino-gen/command'
    Padrino.bin_gen(ARGV)
  rescue
    puts "<= You need padrino-gen! Run: gem install padrino-gen"
  end
else
  # We load our cli
  require 'padrino-core/cli/base'
  Padrino::Cli::Base.start(ARGV)
end